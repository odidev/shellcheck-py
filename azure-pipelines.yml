trigger:
  branches:
    include: [master, test-me-*]
  tags:
    include: ['*']

resources:
  repositories:
    - repository: odidev
      type: github
      endpoint: odidev
      name: odidev/azure-pipeline-templates
      ref: refs/tags/v2.2.0

jobs:
- template: job--python-tox.yml@odidev
  parameters:
    toxenvs: [py38]
    os: windows
    coverage: false
    wheel_tags: true
- template: job--python-tox.yml@odidev
  parameters:
    toxenvs: [py38]
    os: macos
    coverage: false
    wheel_tags: true
- template: job--python-tox.yml@odidev
  parameters:
    toxenvs: [py38]
    os: linux
    coverage: false
BuildManylinuxWheels:
  steps:
      - uses: actions/checkout@v2
        with:
            submodules: recursive
      - name: Set up QEMU
        if: ${{ matrix.arch == 'aarch64' }}
        uses: docker/setup-qemu-action@v1
      - name: Build Wheel
        run: |
            docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
            ${{ env.img }} \
            bash -exc '${{ env.py }} -m venv .env && \
            source .env/bin/activate && \
            pip install --upgrade pip && \
            pip wheel --no-deps . -w wheels && \
            for WHL in target/wheels/*whl; do auditwheel repair ${WHL}; done && \
            deactivate'
      #- uses: actions/upload-artifact@v2
      #  with:
      #    path: ./wheels/*.whl
      - task: PublishBuildArtifacts@1
        #condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
        inputs:
          pathToPublish: wheels
          artifactName: wheel_linux_aarch64
        displayName: publish wheel artifact
